name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Środowisko do testów'
        required: true
        default: 'integration'
        type: choice
        options:
        - integration
        - staging
      debug_enabled:
        description: 'Włącz tryb debug'
        required: false
        type: boolean
        default: false

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint

  unit-tests:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests with coverage
        run: npm run test:coverage
        
      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/
          
  e2e-tests:
    name: E2E Tests
    needs: lint
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'integration' }}
    
    env:
      PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
      PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      DEBUG: ${{ github.event.inputs.debug_enabled == 'true' && 'pw:api' || '' }}
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install chromium
        
      - name: Run E2E tests
        run: npm run test:e2e
        
      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          
  status-comment:
    name: Update PR Status
    needs: [unit-tests, e2e-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const unitTests = '${{ needs.unit-tests.result }}';
            const e2eTests = '${{ needs.e2e-tests.result }}';
            
            let status = '✅ All checks have passed!';
            if (unitTests !== 'success' || e2eTests !== 'success') {
              status = '❌ Some checks have failed:';
              if (unitTests !== 'success') status += '\n- Unit Tests failed';
              if (e2eTests !== 'success') status += '\n- E2E Tests failed';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: status
            }); 